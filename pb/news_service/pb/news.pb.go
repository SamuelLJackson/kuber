// Code generated by protoc-gen-go. DO NOT EDIT.
// source: news.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventType int32

const (
	EventType_LINK_ADDED   EventType = 0
	EventType_LINK_UPDATED EventType = 1
	EventType_LINK_DELETED EventType = 2
)

var EventType_name = map[int32]string{
	0: "LINK_ADDED",
	1: "LINK_UPDATED",
	2: "LINK_DELETED",
}
var EventType_value = map[string]int32{
	"LINK_ADDED":   0,
	"LINK_UPDATED": 1,
	"LINK_DELETED": 2,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}
func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_news_47ed8b0e68246b67, []int{0}
}

type GetNewsRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	StartToken           string   `protobuf:"bytes,2,opt,name=startToken,proto3" json:"startToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewsRequest) Reset()         { *m = GetNewsRequest{} }
func (m *GetNewsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewsRequest) ProtoMessage()    {}
func (*GetNewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_news_47ed8b0e68246b67, []int{0}
}
func (m *GetNewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewsRequest.Unmarshal(m, b)
}
func (m *GetNewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewsRequest.Marshal(b, m, deterministic)
}
func (dst *GetNewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewsRequest.Merge(dst, src)
}
func (m *GetNewsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewsRequest.Size(m)
}
func (m *GetNewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewsRequest proto.InternalMessageInfo

func (m *GetNewsRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetNewsRequest) GetStartToken() string {
	if m != nil {
		return m.StartToken
	}
	return ""
}

type Event struct {
	EventType            EventType            `protobuf:"varint,1,opt,name=eventType,proto3,enum=pb.EventType" json:"eventType,omitempty"`
	Username             string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Url                  string               `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_news_47ed8b0e68246b67, []int{1}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventType() EventType {
	if m != nil {
		return m.EventType
	}
	return EventType_LINK_ADDED
}

func (m *Event) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Event) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Event) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type GetNewsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextToken            string   `protobuf:"bytes,2,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewsResponse) Reset()         { *m = GetNewsResponse{} }
func (m *GetNewsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewsResponse) ProtoMessage()    {}
func (*GetNewsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_news_47ed8b0e68246b67, []int{2}
}
func (m *GetNewsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewsResponse.Unmarshal(m, b)
}
func (m *GetNewsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewsResponse.Marshal(b, m, deterministic)
}
func (dst *GetNewsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewsResponse.Merge(dst, src)
}
func (m *GetNewsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewsResponse.Size(m)
}
func (m *GetNewsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewsResponse proto.InternalMessageInfo

func (m *GetNewsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *GetNewsResponse) GetNextToken() string {
	if m != nil {
		return m.NextToken
	}
	return ""
}

func (m *GetNewsResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*GetNewsRequest)(nil), "pb.GetNewsRequest")
	proto.RegisterType((*Event)(nil), "pb.Event")
	proto.RegisterType((*GetNewsResponse)(nil), "pb.GetNewsResponse")
	proto.RegisterEnum("pb.EventType", EventType_name, EventType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NewsClient is the client API for News service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NewsClient interface {
	GetNews(ctx context.Context, in *GetNewsRequest, opts ...grpc.CallOption) (*GetNewsResponse, error)
}

type newsClient struct {
	cc *grpc.ClientConn
}

func NewNewsClient(cc *grpc.ClientConn) NewsClient {
	return &newsClient{cc}
}

func (c *newsClient) GetNews(ctx context.Context, in *GetNewsRequest, opts ...grpc.CallOption) (*GetNewsResponse, error) {
	out := new(GetNewsResponse)
	err := c.cc.Invoke(ctx, "/pb.News/GetNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NewsServer is the server API for News service.
type NewsServer interface {
	GetNews(context.Context, *GetNewsRequest) (*GetNewsResponse, error)
}

func RegisterNewsServer(s *grpc.Server, srv NewsServer) {
	s.RegisterService(&_News_serviceDesc, srv)
}

func _News_GetNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NewsServer).GetNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.News/GetNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NewsServer).GetNews(ctx, req.(*GetNewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _News_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.News",
	HandlerType: (*NewsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNews",
			Handler:    _News_GetNews_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "news.proto",
}

func init() { proto.RegisterFile("news.proto", fileDescriptor_news_47ed8b0e68246b67) }

var fileDescriptor_news_47ed8b0e68246b67 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x9b, 0xb4, 0x56, 0x33, 0xd5, 0x1a, 0xc6, 0x4b, 0x08, 0xa2, 0x35, 0xa7, 0xa2, 0x90,
	0x42, 0xf4, 0xe0, 0x41, 0x90, 0x42, 0x82, 0x88, 0xa5, 0x48, 0x88, 0x67, 0x69, 0x70, 0x2c, 0x62,
	0x9b, 0xc4, 0xdd, 0x8d, 0xd5, 0x77, 0xf1, 0x61, 0x65, 0x37, 0xcd, 0xc6, 0x78, 0x9b, 0xf9, 0x66,
	0xc8, 0xfc, 0x5f, 0x16, 0x20, 0xa3, 0x0d, 0xf7, 0x0b, 0x96, 0x8b, 0x1c, 0xcd, 0x22, 0x75, 0x4f,
	0x97, 0x79, 0xbe, 0x5c, 0xd1, 0x44, 0x91, 0xb4, 0x7c, 0x9d, 0x88, 0xb7, 0x35, 0x71, 0xb1, 0x58,
	0x17, 0xd5, 0x92, 0x37, 0x83, 0xe1, 0x1d, 0x89, 0x39, 0x6d, 0x78, 0x4c, 0x1f, 0x25, 0x71, 0x81,
	0x2e, 0xec, 0x95, 0x9c, 0x58, 0xb6, 0x58, 0x93, 0x63, 0x8c, 0x8c, 0xb1, 0x15, 0xeb, 0x1e, 0x4f,
	0x00, 0xb8, 0x58, 0x30, 0x91, 0xe4, 0xef, 0x94, 0x39, 0xa6, 0x9a, 0xfe, 0x21, 0xde, 0x8f, 0x01,
	0x3b, 0xd1, 0x27, 0x65, 0x02, 0x2f, 0xc0, 0x22, 0x59, 0x24, 0xdf, 0x45, 0xf5, 0x99, 0x61, 0x70,
	0xe0, 0x17, 0xa9, 0x1f, 0xd5, 0x30, 0x6e, 0xe6, 0xad, 0x93, 0xe6, 0xbf, 0x93, 0x36, 0x74, 0x4b,
	0xb6, 0x72, 0xba, 0x0a, 0xcb, 0x12, 0xaf, 0xc1, 0xd2, 0x16, 0x4e, 0x6f, 0x64, 0x8c, 0x07, 0x81,
	0xeb, 0x57, 0x9e, 0x7e, 0xed, 0xe9, 0x27, 0xf5, 0x46, 0xdc, 0x2c, 0x7b, 0x2f, 0x70, 0xa8, 0x65,
	0x79, 0x91, 0x67, 0x9c, 0xf0, 0x0c, 0xfa, 0x2a, 0x07, 0x77, 0x8c, 0x51, 0x77, 0x3c, 0x08, 0x2c,
	0x1d, 0x32, 0xde, 0x0e, 0xf0, 0x18, 0xac, 0x8c, 0xbe, 0x5a, 0xce, 0x0d, 0x90, 0xf9, 0x88, 0xb1,
	0x3a, 0x1f, 0x31, 0x76, 0x7e, 0x0b, 0x96, 0xb6, 0xc4, 0x21, 0xc0, 0xec, 0x7e, 0xfe, 0xf0, 0x3c,
	0x0d, 0xc3, 0x28, 0xb4, 0x3b, 0x68, 0xc3, 0xbe, 0xea, 0x9f, 0x1e, 0xc3, 0x69, 0x12, 0x85, 0xb6,
	0xa1, 0x49, 0x18, 0xcd, 0x22, 0x49, 0xcc, 0xe0, 0x06, 0x7a, 0x32, 0x23, 0x5e, 0xc1, 0xee, 0x36,
	0x2e, 0xa2, 0x8c, 0xd5, 0x7e, 0x28, 0xf7, 0xa8, 0xc5, 0x2a, 0x1f, 0xaf, 0x93, 0xf6, 0xd5, 0x3f,
	0xb8, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xff, 0x3e, 0xa6, 0x0b, 0x02, 0x00, 0x00,
}
